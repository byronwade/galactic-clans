---
alwaysApply: true
---

# Project & Asset Structure

The project follows a modular, `/src`-based structure to keep game logic, shared systems, and universe-specific content clearly separated.

Refer to [ARCHITECTURE.md](mdc:ARCHITECTURE.md) for a complete overview.

## `/src` Directory Structure

```
/src
  /universes
    /GalacticCore
      /planets
      /characters
      /ui
      /scenes
      main.ts
      manifest.json
  /shared
    /core
    /rendering
    /world
    /entities
    /physics
    /network
    /assets
    /ui
  /utils
  /platforms
    /web
    /desktop
    /mobile
```

-   **/src/universes**: Contains all game-specific content.
-   **/src/shared**: Contains the core engine systems that are shared across all universes.
-   **/src/utils**: Contains utility functions.
-   **/src/platforms**: Contains platform-specific implementations of the interfaces defined in `/src/shared/core`.

## Asset Directory Structure

-   **/models**: Contains `.glb` files for game objects.
    -   Each model should have its own directory (e.g., `ships/scout-class/`).
    -   Include LOD (Level of Detail) models where appropriate (e.g., `scout-lod1.glb`).
-   **/textures**: Contains image files for materials and UI.
    -   Organize by category (e.g., `ships/`, `planets/`, `ui/`).
-   **/audio**: Contains sound files for music, sound effects, and voice.
    -   Organize by type (e.g., `music/`, `sfx/`, `voices/`).
-   **/shaders**: Contains GLSL shader files.
    -   Organize into `vertex/`, `fragment/`, and `compute/` subdirectories.

-   **/src/shared**: Contains the core engine systems that are shared across all universes.
-   **/src/utils**: Contains utility functions.
-   **/src/platforms**: Contains platform-specific implementations of the interfaces defined in `/src/shared/core`.
