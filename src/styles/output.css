/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;

@layer theme {

    :root,
    :host {
        --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
            "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
        --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
            "Courier New", monospace;
        --color-red-300: oklch(80.8% 0.114 19.571);
        --color-red-400: oklch(70.4% 0.191 22.216);
        --color-red-500: oklch(63.7% 0.237 25.331);
        --color-red-600: oklch(57.7% 0.245 27.325);
        --color-orange-400: oklch(75% 0.183 55.934);
        --color-orange-500: oklch(70.5% 0.213 47.604);
        --color-yellow-400: oklch(85.2% 0.199 91.936);
        --color-green-400: oklch(79.2% 0.209 151.711);
        --color-green-600: oklch(62.7% 0.194 149.214);
        --color-blue-400: oklch(70.7% 0.165 254.624);
        --color-purple-400: oklch(71.4% 0.203 305.504);
        --color-black: #000;
        --color-white: #fff;
        --spacing: 0.25rem;
        --text-xs: 0.75rem;
        --text-xs--line-height: calc(1 / 0.75);
        --text-sm: 0.875rem;
        --text-sm--line-height: calc(1.25 / 0.875);
        --text-base: 1rem;
        --text-base--line-height: calc(1.5 / 1);
        --text-lg: 1.125rem;
        --text-lg--line-height: calc(1.75 / 1.125);
        --text-xl: 1.25rem;
        --text-xl--line-height: calc(1.75 / 1.25);
        --text-2xl: 1.5rem;
        --text-2xl--line-height: calc(2 / 1.5);
        --font-weight-medium: 500;
        --font-weight-semibold: 600;
        --font-weight-bold: 700;
        --tracking-tight: -0.025em;
        --tracking-wide: 0.025em;
        --leading-relaxed: 1.625;
        --radius-md: 0.375rem;
        --radius-lg: 0.5rem;
        --radius-xl: 0.75rem;
        --radius-2xl: 1rem;
        --ease-out: cubic-bezier(0, 0, 0.2, 1);
        --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
        --blur-sm: 8px;
        --blur-md: 12px;
        --default-transition-duration: 150ms;
        --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        --default-font-family: var(--font-sans);
        --default-mono-font-family: var(--font-mono);
    }
}

@layer base {

    *,
    ::after,
    ::before,
    ::backdrop,
    ::file-selector-button {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        border: 0 solid;
    }

    html,
    :host {
        line-height: 1.5;
        -webkit-text-size-adjust: 100%;
        tab-size: 4;
        font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent;
    }

    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px;
    }

    abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-size: inherit;
        font-weight: inherit;
    }

    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit;
    }

    b,
    strong {
        font-weight: bolder;
    }

    code,
    kbd,
    samp,
    pre {
        font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
        font-feature-settings: var(--default-mono-font-feature-settings, normal);
        font-variation-settings: var(--default-mono-font-variation-settings, normal);
        font-size: 1em;
    }

    small {
        font-size: 80%;
    }

    sub,
    sup {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
    }

    sub {
        bottom: -0.25em;
    }

    sup {
        top: -0.5em;
    }

    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse;
    }

    :-moz-focusring {
        outline: auto;
    }

    progress {
        vertical-align: baseline;
    }

    summary {
        display: list-item;
    }

    ol,
    ul,
    menu {
        list-style: none;
    }

    img,
    svg,
    video,
    canvas,
    audio,
    iframe,
    embed,
    object {
        display: block;
        vertical-align: middle;
    }

    img,
    video {
        max-width: 100%;
        height: auto;
    }

    button,
    input,
    select,
    optgroup,
    textarea,
    ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        border-radius: 0;
        background-color: transparent;
        opacity: 1;
    }

    :where(select:is([multiple], [size])) optgroup {
        font-weight: bolder;
    }

    :where(select:is([multiple], [size])) optgroup option {
        padding-inline-start: 20px;
    }

    ::file-selector-button {
        margin-inline-end: 4px;
    }

    ::placeholder {
        opacity: 1;
    }

    @supports (not (-webkit-appearance: -apple-pay-button)) or (contain-intrinsic-size: 1px) {
        ::placeholder {
            color: currentcolor;

            @supports (color: color-mix(in lab, red, red)) {
                color: color-mix(in oklab, currentcolor 50%, transparent);
            }
        }
    }

    textarea {
        resize: vertical;
    }

    ::-webkit-search-decoration {
        -webkit-appearance: none;
    }

    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit;
    }

    ::-webkit-datetime-edit {
        display: inline-flex;
    }

    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0;
    }

    ::-webkit-datetime-edit,
    ::-webkit-datetime-edit-year-field,
    ::-webkit-datetime-edit-month-field,
    ::-webkit-datetime-edit-day-field,
    ::-webkit-datetime-edit-hour-field,
    ::-webkit-datetime-edit-minute-field,
    ::-webkit-datetime-edit-second-field,
    ::-webkit-datetime-edit-millisecond-field,
    ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0;
    }

    :-moz-ui-invalid {
        box-shadow: none;
    }

    button,
    input:where([type="button"], [type="reset"], [type="submit"]),
    ::file-selector-button {
        appearance: button;
    }

    ::-webkit-inner-spin-button,
    ::-webkit-outer-spin-button {
        height: auto;
    }

    [hidden]:where(:not([hidden="until-found"])) {
        display: none !important;
    }
}

@layer utilities {
    .pointer-events-auto {
        pointer-events: auto;
    }

    .pointer-events-none {
        pointer-events: none;
    }

    .invisible {
        visibility: hidden;
    }

    .visible {
        visibility: visible;
    }

    .absolute {
        position: absolute;
    }

    .fixed {
        position: fixed;
    }

    .relative {
        position: relative;
    }

    .static {
        position: static;
    }

    .-inset-1 {
        inset: calc(var(--spacing) * -1);
    }

    .inset-0 {
        inset: calc(var(--spacing) * 0);
    }

    .top-1\/2 {
        top: calc(1/2 * 100%);
    }

    .top-4 {
        top: calc(var(--spacing) * 4);
    }

    .top-20 {
        top: calc(var(--spacing) * 20);
    }

    .top-\[70px\] {
        top: 70px;
    }

    .right-4 {
        right: calc(var(--spacing) * 4);
    }

    .left-1\/2 {
        left: calc(1/2 * 100%);
    }

    .left-4 {
        left: calc(var(--spacing) * 4);
    }

    .left-\[-350px\] {
        left: -350px;
    }

    .z-10 {
        z-index: 10;
    }

    .z-\[100\] {
        z-index: 100;
    }

    .z-\[120\] {
        z-index: 120;
    }

    .z-\[125\] {
        z-index: 125;
    }

    .z-\[180\] {
        z-index: 180;
    }

    .z-\[190\] {
        z-index: 190;
    }

    .z-\[200\] {
        z-index: 200;
    }

    .z-\[500\] {
        z-index: 500;
    }

    .z-\[1000\] {
        z-index: 1000;
    }

    .container {
        width: 100%;

        @media (width >=40rem) {
            max-width: 40rem;
        }

        @media (width >=48rem) {
            max-width: 48rem;
        }

        @media (width >=64rem) {
            max-width: 64rem;
        }

        @media (width >=80rem) {
            max-width: 80rem;
        }

        @media (width >=96rem) {
            max-width: 96rem;
        }
    }

    .mr-1 {
        margin-right: calc(var(--spacing) * 1);
    }

    .mr-2 {
        margin-right: calc(var(--spacing) * 2);
    }

    .mb-1 {
        margin-bottom: calc(var(--spacing) * 1);
    }

    .mb-4 {
        margin-bottom: calc(var(--spacing) * 4);
    }

    .block {
        display: block;
    }

    .contents {
        display: contents;
    }

    .flex {
        display: flex;
    }

    .grid {
        display: grid;
    }

    .hidden {
        display: none;
    }

    .inline {
        display: inline;
    }

    .inline-flex {
        display: inline-flex;
    }

    .table {
        display: table;
    }

    .h-1\.5 {
        height: calc(var(--spacing) * 1.5);
    }

    .h-6 {
        height: calc(var(--spacing) * 6);
    }

    .h-8 {
        height: calc(var(--spacing) * 8);
    }

    .h-9 {
        height: calc(var(--spacing) * 9);
    }

    .h-10 {
        height: calc(var(--spacing) * 10);
    }

    .h-20 {
        height: calc(var(--spacing) * 20);
    }

    .h-\[calc\(100vh-2rem\)\] {
        height: calc(100vh - 2rem);
    }

    .w-6 {
        width: calc(var(--spacing) * 6);
    }

    .w-8 {
        width: calc(var(--spacing) * 8);
    }

    .w-9 {
        width: calc(var(--spacing) * 9);
    }

    .w-10 {
        width: calc(var(--spacing) * 10);
    }

    .w-80 {
        width: calc(var(--spacing) * 80);
    }

    .w-full {
        width: 100%;
    }

    .max-w-\[500px\] {
        max-width: 500px;
    }

    .min-w-20 {
        min-width: calc(var(--spacing) * 20);
    }

    .min-w-\[400px\] {
        min-width: 400px;
    }

    .flex-1 {
        flex: 1;
    }

    .-translate-x-1\/2 {
        --tw-translate-x: calc(calc(1/2 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .-translate-y-1\/2 {
        --tw-translate-y: calc(calc(1/2 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .transform {
        transform: var(--tw-rotate-x, ) var(--tw-rotate-y, ) var(--tw-rotate-z, ) var(--tw-skew-x, ) var(--tw-skew-y, );
    }

    .transform-gpu {
        transform: translateZ(0) var(--tw-rotate-x, ) var(--tw-rotate-y, ) var(--tw-rotate-z, ) var(--tw-skew-x, ) var(--tw-skew-y, );
    }

    .cursor-help {
        cursor: help;
    }

    .cursor-pointer {
        cursor: pointer;
    }

    .resize {
        resize: both;
    }

    .grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr));
    }

    .flex-col {
        flex-direction: column;
    }

    .flex-wrap {
        flex-wrap: wrap;
    }

    .items-center {
        align-items: center;
    }

    .items-end {
        align-items: flex-end;
    }

    .items-start {
        align-items: flex-start;
    }

    .justify-between {
        justify-content: space-between;
    }

    .justify-center {
        justify-content: center;
    }

    .gap-1 {
        gap: calc(var(--spacing) * 1);
    }

    .gap-2 {
        gap: calc(var(--spacing) * 2);
    }

    .gap-3 {
        gap: calc(var(--spacing) * 3);
    }

    .gap-4 {
        gap: calc(var(--spacing) * 4);
    }

    .space-y-1 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-1\.5 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 1.5) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 1.5) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-2 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-3 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-4 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .space-y-6 {
        :where(& > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
        }
    }

    .overflow-y-auto {
        overflow-y: auto;
    }

    .rounded {
        border-radius: 0.25rem;
    }

    .rounded-2xl {
        border-radius: var(--radius-2xl);
    }

    .rounded-full {
        border-radius: calc(infinity * 1px);
    }

    .rounded-lg {
        border-radius: var(--radius-lg);
    }

    .rounded-md {
        border-radius: var(--radius-md);
    }

    .rounded-xl {
        border-radius: var(--radius-xl);
    }

    .rounded-r-xl {
        border-top-right-radius: var(--radius-xl);
        border-bottom-right-radius: var(--radius-xl);
    }

    .border {
        border-style: var(--tw-border-style);
        border-width: 1px;
    }

    .border-t {
        border-top-style: var(--tw-border-style);
        border-top-width: 1px;
    }

    .border-b {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
    }

    .border-l-0 {
        border-left-style: var(--tw-border-style);
        border-left-width: 0px;
    }

    .border-red-500\/30 {
        border-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 30%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-red-500) 30%, transparent);
        }
    }

    .border-white\/10 {
        border-color: color-mix(in srgb, #fff 10%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
    }

    .border-white\/15 {
        border-color: color-mix(in srgb, #fff 15%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-white) 15%, transparent);
        }
    }

    .border-white\/20 {
        border-color: color-mix(in srgb, #fff 20%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
    }

    .border-white\/30 {
        border-color: color-mix(in srgb, #fff 30%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-white) 30%, transparent);
        }
    }

    .bg-black\/60 {
        background-color: color-mix(in srgb, #000 60%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-black) 60%, transparent);
        }
    }

    .bg-black\/70 {
        background-color: color-mix(in srgb, #000 70%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-black) 70%, transparent);
        }
    }

    .bg-black\/80 {
        background-color: color-mix(in srgb, #000 80%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-black) 80%, transparent);
        }
    }

    .bg-black\/85 {
        background-color: color-mix(in srgb, #000 85%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-black) 85%, transparent);
        }
    }

    .bg-red-500 {
        background-color: var(--color-red-500);
    }

    .bg-red-500\/20 {
        background-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 20%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-red-500) 20%, transparent);
        }
    }

    .bg-transparent {
        background-color: transparent;
    }

    .bg-white\/5 {
        background-color: color-mix(in srgb, #fff 5%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
        }
    }

    .bg-white\/10 {
        background-color: color-mix(in srgb, #fff 10%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
    }

    .bg-gradient-to-br {
        --tw-gradient-position: to bottom right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }

    .bg-gradient-to-r {
        --tw-gradient-position: to right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }

    .from-black\/90 {
        --tw-gradient-from: color-mix(in srgb, #000 90%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-from: color-mix(in oklab, var(--color-black) 90%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .from-green-400 {
        --tw-gradient-from: var(--color-green-400);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .from-orange-400 {
        --tw-gradient-from: var(--color-orange-400);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .from-red-400 {
        --tw-gradient-from: var(--color-red-400);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .from-yellow-400 {
        --tw-gradient-from: var(--color-yellow-400);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .via-black\/80 {
        --tw-gradient-via: color-mix(in srgb, #000 80%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-via: color-mix(in oklab, var(--color-black) 80%, transparent);
        }

        --tw-gradient-via-stops: var(--tw-gradient-position),
        var(--tw-gradient-from) var(--tw-gradient-from-position),
        var(--tw-gradient-via) var(--tw-gradient-via-position),
        var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }

    .to-black\/70 {
        --tw-gradient-to: color-mix(in srgb, #000 70%, transparent);

        @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-to: color-mix(in oklab, var(--color-black) 70%, transparent);
        }

        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-green-600 {
        --tw-gradient-to: var(--color-green-600);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-orange-500 {
        --tw-gradient-to: var(--color-orange-500);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-red-500 {
        --tw-gradient-to: var(--color-red-500);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-red-600 {
        --tw-gradient-to: var(--color-red-600);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .p-1 {
        padding: calc(var(--spacing) * 1);
    }

    .p-3 {
        padding: calc(var(--spacing) * 3);
    }

    .p-4 {
        padding: calc(var(--spacing) * 4);
    }

    .p-6 {
        padding: calc(var(--spacing) * 6);
    }

    .px-2 {
        padding-inline: calc(var(--spacing) * 2);
    }

    .px-3 {
        padding-inline: calc(var(--spacing) * 3);
    }

    .px-4 {
        padding-inline: calc(var(--spacing) * 4);
    }

    .px-5 {
        padding-inline: calc(var(--spacing) * 5);
    }

    .px-6 {
        padding-inline: calc(var(--spacing) * 6);
    }

    .px-8 {
        padding-inline: calc(var(--spacing) * 8);
    }

    .py-1 {
        padding-block: calc(var(--spacing) * 1);
    }

    .py-1\.5 {
        padding-block: calc(var(--spacing) * 1.5);
    }

    .py-2 {
        padding-block: calc(var(--spacing) * 2);
    }

    .py-3 {
        padding-block: calc(var(--spacing) * 3);
    }

    .pt-0 {
        padding-top: calc(var(--spacing) * 0);
    }

    .pt-4 {
        padding-top: calc(var(--spacing) * 4);
    }

    .text-center {
        text-align: center;
    }

    .text-2xl {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
    }

    .text-base {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
    }

    .text-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
    }

    .text-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }

    .text-xl {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height));
    }

    .text-xs {
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
    }

    .text-\[10px\] {
        font-size: 10px;
    }

    .leading-none {
        --tw-leading: 1;
        line-height: 1;
    }

    .leading-relaxed {
        --tw-leading: var(--leading-relaxed);
        line-height: var(--leading-relaxed);
    }

    .font-bold {
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold);
    }

    .font-medium {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
    }

    .font-semibold {
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold);
    }

    .tracking-tight {
        --tw-tracking: var(--tracking-tight);
        letter-spacing: var(--tracking-tight);
    }

    .tracking-wide {
        --tw-tracking: var(--tracking-wide);
        letter-spacing: var(--tracking-wide);
    }

    .whitespace-nowrap {
        white-space: nowrap;
    }

    .text-black {
        color: var(--color-black);
    }

    .text-blue-400 {
        color: var(--color-blue-400);
    }

    .text-orange-400 {
        color: var(--color-orange-400);
    }

    .text-purple-400 {
        color: var(--color-purple-400);
    }

    .text-red-400 {
        color: var(--color-red-400);
    }

    .text-white {
        color: var(--color-white);
    }

    .text-yellow-400 {
        color: var(--color-yellow-400);
    }

    .uppercase {
        text-transform: uppercase;
    }

    .underline-offset-4 {
        text-underline-offset: 4px;
    }

    .opacity-0 {
        opacity: 0%;
    }

    .shadow {
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .shadow-2xl {
        --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .ring {
        --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .outline {
        outline-style: var(--tw-outline-style);
        outline-width: 1px;
    }

    .blur {
        --tw-blur: blur(8px);
        filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
    }

    .blur-sm {
        --tw-blur: blur(var(--blur-sm));
        filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
    }

    .filter {
        filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
    }

    .backdrop-blur-\[20px\] {
        --tw-backdrop-blur: blur(20px);
        -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
        backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    }

    .backdrop-blur-md {
        --tw-backdrop-blur: blur(var(--blur-md));
        -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
        backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    }

    .backdrop-filter {
        -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
        backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    }

    .transition {
        transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-all {
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-colors {
        transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-transform {
        transition-property: transform, translate, scale, rotate;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .duration-200 {
        --tw-duration: 200ms;
        transition-duration: 200ms;
    }

    .duration-400 {
        --tw-duration: 400ms;
        transition-duration: 400ms;
    }

    .duration-500 {
        --tw-duration: 500ms;
        transition-duration: 500ms;
    }

    .ease-in-out {
        --tw-ease: var(--ease-in-out);
        transition-timing-function: var(--ease-in-out);
    }

    .ease-out {
        --tw-ease: var(--ease-out);
        transition-timing-function: var(--ease-out);
    }

    .group-hover\:scale-110 {
        &:is(:where(.group):hover *) {
            @media (hover: hover) {
                --tw-scale-x: 110%;
                --tw-scale-y: 110%;
                --tw-scale-z: 110%;
                scale: var(--tw-scale-x) var(--tw-scale-y);
            }
        }
    }

    .before\:pointer-events-none {
        &::before {
            content: var(--tw-content);
            pointer-events: none;
        }
    }

    .before\:absolute {
        &::before {
            content: var(--tw-content);
            position: absolute;
        }
    }

    .before\:inset-0 {
        &::before {
            content: var(--tw-content);
            inset: calc(var(--spacing) * 0);
        }
    }

    .before\:rounded-2xl {
        &::before {
            content: var(--tw-content);
            border-radius: var(--radius-2xl);
        }
    }

    .before\:bg-gradient-to-r {
        &::before {
            content: var(--tw-content);
            --tw-gradient-position: to right in oklab;
            background-image: linear-gradient(var(--tw-gradient-stops));
        }
    }

    .before\:via-transparent {
        &::before {
            content: var(--tw-content);
            --tw-gradient-via: transparent;
            --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
            --tw-gradient-stops: var(--tw-gradient-via-stops);
        }
    }

    .before\:opacity-50 {
        &::before {
            content: var(--tw-content);
            opacity: 50%;
        }
    }

    .hover\:scale-105 {
        &:hover {
            @media (hover: hover) {
                --tw-scale-x: 105%;
                --tw-scale-y: 105%;
                --tw-scale-z: 105%;
                scale: var(--tw-scale-x) var(--tw-scale-y);
            }
        }
    }

    .hover\:border-white\/50 {
        &:hover {
            @media (hover: hover) {
                border-color: color-mix(in srgb, #fff 50%, transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    border-color: color-mix(in oklab, var(--color-white) 50%, transparent);
                }
            }
        }
    }

    .hover\:bg-red-500\/30 {
        &:hover {
            @media (hover: hover) {
                background-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 30%, transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab, var(--color-red-500) 30%, transparent);
                }
            }
        }
    }

    .hover\:bg-red-600 {
        &:hover {
            @media (hover: hover) {
                background-color: var(--color-red-600);
            }
        }
    }

    .hover\:bg-white\/10 {
        &:hover {
            @media (hover: hover) {
                background-color: color-mix(in srgb, #fff 10%, transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
                }
            }
        }
    }

    .hover\:bg-white\/20 {
        &:hover {
            @media (hover: hover) {
                background-color: color-mix(in srgb, #fff 20%, transparent);

                @supports (color: color-mix(in lab, red, red)) {
                    background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
                }
            }
        }
    }

    .hover\:text-black {
        &:hover {
            @media (hover: hover) {
                color: var(--color-black);
            }
        }
    }

    .hover\:text-red-300 {
        &:hover {
            @media (hover: hover) {
                color: var(--color-red-300);
            }
        }
    }

    .hover\:text-white {
        &:hover {
            @media (hover: hover) {
                color: var(--color-white);
            }
        }
    }

    .hover\:underline {
        &:hover {
            @media (hover: hover) {
                text-decoration-line: underline;
            }
        }
    }

    .focus-visible\:ring-1 {
        &:focus-visible {
            --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
    }

    .focus-visible\:outline-none {
        &:focus-visible {
            --tw-outline-style: none;
            outline-style: none;
        }
    }

    .disabled\:pointer-events-none {
        &:disabled {
            pointer-events: none;
        }
    }

    .disabled\:opacity-50 {
        &:disabled {
            opacity: 50%;
        }
    }

    .\[\&_svg\]\:pointer-events-none {
        & svg {
            pointer-events: none;
        }
    }

    .\[\&_svg\]\:size-4 {
        & svg {
            width: calc(var(--spacing) * 4);
            height: calc(var(--spacing) * 4);
        }
    }

    .\[\&_svg\]\:shrink-0 {
        & svg {
            flex-shrink: 0;
        }
    }
}

body {
    margin: 0;
    padding: 0;
    overflow: hidden;
    font-family: 'Roboto', sans-serif;
    background: radial-gradient(ellipse at center, #1a1a2e 0%, #0f0f1a 100%);
}

@keyframes float-gentle {

    0%,
    100% {
        transform: translateY(0px) rotate(0deg);
    }

    50% {
        transform: translateY(-8px) rotate(1deg);
    }
}

.glow-text {
    text-shadow: 0 0 10px currentColor, 0 0 20px currentColor, 0 0 30px currentColor;
}

.float-animation {
    animation: float-gentle 4s ease-in-out infinite;
}

.top-controls {
    min-width: max-content;
}

.top-controls .user-profile {
    white-space: nowrap;
}

.game-speed-controls {
    min-width: max-content;
}

.game-speed-controls .speed-button,
.game-speed-controls .pause-button {
    min-width: 32px;
    white-space: nowrap;
}

.detail-panel.open {
    left: 1rem;
    display: flex;
    opacity: 1;
    visibility: visible;
}

.panel-toggle.open {
    left: 345px;
}

.speed-button.active {
    border-color: #00ff88;
    background-color: rgba(0, 255, 136, 0.8);
    color: black;
}

.breadcrumb-item.active {
    color: #00ff88;
    background-color: rgba(0, 255, 136, 0.1);
}

.help-overlay {
    max-width: 42rem;
    width: 100%;
    margin-left: 1rem;
    margin-right: 1rem;
    max-height: 90vh;
    background-color: rgba(0, 0, 0, 0.9);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 1rem;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);
}

.help-content {
    padding: 1.5rem;
    overflow-y: auto;
    max-height: 100%;
}

.help-content h3 {
    font-size: 1.25rem;
    font-weight: bold;
    color: #00ff88;
    margin-bottom: 1.5rem;
    text-align: center;
}

.help-content h4 {
    font-size: 1.125rem;
    font-weight: 600;
    color: white;
    margin-bottom: 0.75rem;
    margin-top: 1.5rem;
}

.help-content p {
    color: rgba(255, 255, 255, 0.7);
    line-height: 1.625;
    margin-bottom: 1rem;
}

.help-content ul {
    margin-bottom: 1rem;
}

.help-content li {
    color: rgba(255, 255, 255, 0.7);
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 0.5rem;
}

.help-content .key {
    background-color: #1a1a1a;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-size: 0.75rem;
    font-family: ui-monospace, monospace;
    border: 1px solid rgba(255, 255, 255, 0.2);
    min-width: 24px;
    text-align: center;
}

canvas {
    display: block;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    z-index: 1;
    background: #0a0a0a;
}

#game-ui {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 100;
    display: flex;
    flex-direction: column;
}

#game-ui * {
    pointer-events: auto;
}

.panel {
    position: absolute;
    background: rgba(10, 20, 30, 0.8);
    border: 1px solid rgba(100, 200, 255, 0.5);
    border-radius: 5px;
    padding: 15px;
    box-shadow: 0 0 15px rgba(100, 200, 255, 0.2);
    backdrop-filter: blur(5px);
    pointer-events: all;
    opacity: 0;
    transform: scale(0.95);
    transition: opacity 0.3s ease, transform 0.3s ease;
}

.panel.visible {
    opacity: 1;
    transform: scale(1);
}

.panel h3 {
    margin-top: 0;
    color: #aaddff;
    border-bottom: 1px solid rgba(100, 200, 255, 0.3);
    padding-bottom: 10px;
    font-weight: 500;
}

.panel p {
    margin: 5px 0 10px;
    color: #aaa;
    font-style: italic;
}

.panel-stats div {
    display: flex;
    justify-content: space-between;
    padding: 5px 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.05);
}

.panel-stats span:last-child {
    font-weight: bold;
    color: #fff;
}

.nav-breadcrumb {
    position: fixed;
    top: 15px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    align-items: center;
    gap: 10px;
    background: rgba(0, 0, 0, 0.7);
    padding: 8px 20px;
    border-radius: 25px;
    backdrop-filter: blur(15px);
    border: 1px solid rgba(255, 255, 255, 0.15);
    z-index: 200;
    font-size: 14px;
    font-weight: 500;
}

.breadcrumb-item {
    color: rgba(255, 255, 255, 0.6);
    cursor: pointer;
    transition: all 0.3s ease;
    padding: 4px 8px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    gap: 6px;
}

.breadcrumb-item i {
    font-size: 14px;
    color: #00ff88;
}

.breadcrumb-item.active {
    color: #00ff88;
    background: rgba(0, 255, 136, 0.1);
}

.breadcrumb-item:hover:not(.active) {
    color: white;
    background: rgba(255, 255, 255, 0.1);
}

.breadcrumb-separator {
    color: rgba(255, 255, 255, 0.3);
    font-size: 16px;
}

#resource-panel {
    position: fixed;
    top: 70px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 15px;
    background: rgba(0, 0, 0, 0.8);
    padding: 10px 20px;
    border-radius: 15px;
    color: white;
    font-family: 'Roboto', sans-serif;
    backdrop-filter: blur(15px);
    border: 1px solid rgba(255, 255, 255, 0.15);
    z-index: 190;
    animation: slideInFromTop 0.5s ease-out;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
}

.detail-panel {
    position: fixed;
    top: 15px;
    left: -350px;
    width: 320px;
    height: calc(100vh - 30px);
    background: rgba(0, 0, 0, 0.85);
    border: 1px solid rgba(0, 255, 136, 0.3);
    border-radius: 12px;
    backdrop-filter: blur(20px);
    z-index: 120;
    display: none;
    flex-direction: column;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);
    transition: all 0.4s ease;
    opacity: 0;
    visibility: hidden;
}

.detail-panel.open {
    left: 15px;
    display: flex;
    opacity: 1;
    visibility: visible;
}

.panel-toggle {
    position: fixed;
    top: 50%;
    left: 15px;
    transform: translateY(-50%);
    width: 40px;
    height: 80px;
    background: rgba(0, 0, 0, 0.8);
    border: 1px solid rgba(0, 255, 136, 0.3);
    border-left: none;
    border-radius: 0 12px 12px 0;
    backdrop-filter: blur(15px);
    z-index: 125;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    color: rgba(255, 255, 255, 0.7);
    font-size: 18px;
}

.panel-toggle:hover {
    background: rgba(0, 255, 136, 0.8);
    color: black;
    border-color: #00ff88;
}

.panel-toggle.open {
    left: 345px;
}

.panel-toggle i {
    font-size: 16px;
    line-height: 1;
}

.minimap-container {
    position: fixed;
    bottom: 15px;
    right: 15px;
    width: 220px;
    height: 220px;
    background: rgba(0, 0, 0, 0.8);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 12px;
    backdrop-filter: blur(15px);
    z-index: 110;
    padding: 12px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
}

.minimap-canvas {
    width: 100%;
    height: 100%;
    border-radius: 8px;
    background: rgba(0, 20, 40, 0.8);
}

.top-controls {
    position: fixed;
    top: 15px;
    right: 15px;
    display: flex;
    gap: 8px;
    z-index: 200;
}

.user-profile {
    display: flex;
    align-items: center;
    gap: 8px;
    background: rgba(0, 0, 0, 0.8);
    padding: 8px 12px;
    border-radius: 25px;
    border: 1px solid rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(15px);
}

.user-avatar {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background: linear-gradient(45deg, #00ff88, #0099ff);
    display: flex;
    align-items: center;
    justify-content: center;
    color: black;
    font-weight: bold;
    font-size: 14px;
}

.user-name {
    color: white;
    font-size: 14px;
    font-weight: 500;
}

.control-btn {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: rgba(0, 0, 0, 0.8);
    border: 1px solid rgba(255, 255, 255, 0.3);
    color: white;
    font-weight: bold;
    cursor: pointer;
    backdrop-filter: blur(15px);
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 16px;
}

.control-btn:hover {
    background: rgba(0, 255, 136, 0.8);
    border-color: #00ff88;
    color: black;
    transform: scale(1.1);
}

.control-btn.settings {
    background: rgba(0, 0, 0, 0.8);
}

.control-btn.settings:hover {
    background: rgba(102, 204, 255, 0.8);
    border-color: #66ccff;
}

.control-btn.help {
    background: rgba(0, 0, 0, 0.8);
}

.control-btn.help:hover {
    background: rgba(255, 193, 7, 0.8);
    border-color: #ffc107;
}

.control-btn i {
    font-size: 16px;
    line-height: 1;
}

#performance-hud {
    position: fixed;
    bottom: 15px;
    right: 15px;
    background: rgba(0, 0, 0, 0.7);
    padding: 10px 15px;
    border-radius: 8px;
    border: 1px solid rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(10px);
    z-index: 110;
    font-size: 12px;
    color: rgba(255, 255, 255, 0.8);
    min-width: 120px;
}

.game-speed-controls {
    position: fixed;
    top: 65px;
    right: 15px;
    display: flex;
    gap: 5px;
    background: rgba(0, 0, 0, 0.8);
    padding: 8px;
    border-radius: 8px;
    border: 1px solid rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(15px);
    z-index: 180;
}

.speed-button,
.pause-button {
    padding: 6px 12px;
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 6px;
    background: rgba(255, 255, 255, 0.1);
    color: white;
    font-size: 12px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
}

.speed-button:hover,
.pause-button:hover {
    background: rgba(255, 255, 255, 0.2);
    border-color: rgba(255, 255, 255, 0.5);
}

.speed-button.active {
    background: rgba(0, 255, 136, 0.8);
    border-color: #00ff88;
    color: black;
}

.pause-button i {
    font-size: 12px;
    line-height: 1;
}

@keyframes slideInFromTop {
    from {
        transform: translateX(-50%) translateY(-100%);
        opacity: 0;
    }

    to {
        transform: translateX(-50%) translateY(0);
        opacity: 1;
    }
}

.resource {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2px;
    font-weight: bold;
    position: relative;
    transition: all 0.3s ease;
    padding: 8px 12px;
    border-radius: 8px;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    min-width: 80px;
    text-align: center;
    font-size: 12px;
}

.resource-icon {
    font-size: 16px;
    margin-bottom: 2px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #00ff88;
    text-shadow: 0 0 8px rgba(0, 255, 136, 0.3);
}

.resource-value {
    font-size: 16px;
    font-weight: 700;
    color: #00ff88;
    text-shadow: 0 0 8px rgba(0, 255, 136, 0.4);
}

.resource-label {
    font-size: 10px;
    font-weight: 500;
    color: rgba(255, 255, 255, 0.8);
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.resource.updated {
    animation: resourceGain 0.6s ease-out;
}

.notification {
    position: fixed;
    top: 140px;
    right: 20px;
    max-width: 300px;
    background: rgba(0, 0, 0, 0.9);
    border: 1px solid rgba(0, 255, 136, 0.5);
    border-radius: 8px;
    padding: 15px;
    backdrop-filter: blur(15px);
    z-index: 250;
    animation: slideInFromRight 0.3s ease-out;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.4);
}

.notification.success {
    border-color: rgba(0, 255, 136, 0.8);
    background: rgba(0, 50, 25, 0.9);
}

.notification.warning {
    border-color: rgba(255, 193, 7, 0.8);
    background: rgba(50, 40, 0, 0.9);
}

.notification.error {
    border-color: rgba(244, 67, 54, 0.8);
    background: rgba(50, 15, 15, 0.9);
}

@keyframes resourceGain {
    0% {
        transform: scale(1);
        color: white;
    }

    50% {
        transform: scale(1.1);
        color: #00ff00;
        text-shadow: 0 0 10px #00ff00;
    }

    100% {
        transform: scale(1);
        color: white;
        text-shadow: none;
    }
}

.help-overlay {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(0, 0, 0, 0.95);
    border: 1px solid rgba(255, 193, 7, 0.8);
    border-radius: 15px;
    padding: 30px;
    backdrop-filter: blur(25px);
    z-index: 1000;
    max-width: 600px;
    max-height: 80vh;
    overflow-y: auto;
    color: white;
    display: none;
    box-shadow: 0 15px 50px rgba(0, 0, 0, 0.8);
}

.help-overlay.visible {
    display: block;
    animation: fadeInScale 0.3s ease-out;
}

.help-content h3 {
    color: #00ff88;
    margin-top: 0;
    text-align: center;
    font-size: 24px;
    margin-bottom: 20px;
}

.help-section {
    margin-bottom: 20px;
}

.help-section h4 {
    color: #66ccff;
    margin-bottom: 10px;
    font-size: 16px;
}

.help-section p {
    margin: 5px 0;
    color: rgba(255, 255, 255, 0.8);
    font-size: 14px;
    line-height: 1.4;
}

#info-panel {
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    background: rgba(0, 0, 0, 0.8);
    padding: 20px;
    border-radius: 10px;
    color: white;
    font-family: 'Roboto', sans-serif;
    max-width: 300px;
    text-align: center;
    backdrop-filter: blur(15px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    transition: all 0.3s ease;
    z-index: 130;
}

#info-panel.visible {
    animation: slideInFromBottom 0.4s ease-out;
}

.hidden {
    display: none !important;
}

@keyframes slideInFromBottom {
    from {
        transform: translateX(-50%) translateY(100%);
        opacity: 0;
    }

    to {
        transform: translateX(-50%) translateY(0);
        opacity: 1;
    }
}

#info-panel.hidden {
    display: none;
}

#return-button,
#claim-button {
    background-color: #107c10;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
    font-weight: bold;
    margin: 5px;
    transition: all 0.3s ease;
}

#return-button:hover,
#claim-button:hover {
    background-color: #0a630a;
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
}

#claim-button {
    background-color: #ff6b35;
}

#claim-button:hover {
    background-color: #e55a2b;
}

#claim-button.claimed {
    background-color: #28a745;
    cursor: not-allowed;
}

#claim-button.claimed:hover {
    background-color: #28a745;
    transform: none;
}

.system-claimed-notification {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(40, 167, 69, 0.9);
    color: white;
    padding: 20px 30px;
    border-radius: 10px;
    font-size: 18px;
    font-weight: bold;
    z-index: 1000;
    animation: claimNotification 2s ease-out forwards;
}

@keyframes claimNotification {
    0% {
        transform: translate(-50%, -50%) scale(0.5);
        opacity: 0;
    }

    20% {
        transform: translate(-50%, -50%) scale(1.1);
        opacity: 1;
    }

    80% {
        transform: translate(-50%, -50%) scale(1);
        opacity: 1;
    }

    100% {
        transform: translate(-50%, -50%) scale(0.9);
        opacity: 0;
    }
}

.help-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(10px);
    display: none;
    justify-content: center;
    align-items: center;
    z-index: 2000;
    animation: fadeIn 0.3s ease-out;
}

.help-overlay.visible {
    display: flex;
}

.help-content {
    background: rgba(0, 0, 0, 0.9);
    border: 2px solid rgba(255, 255, 255, 0.2);
    border-radius: 15px;
    padding: 30px;
    max-width: 500px;
    color: white;
    font-family: 'Roboto', sans-serif;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
}

.help-content h3 {
    margin: 0 0 20px 0;
    font-size: 24px;
    text-align: center;
    color: #00ff88;
    text-shadow: 0 0 10px #00ff88;
}

.help-content h4 {
    margin: 15px 0 10px 0;
    font-size: 18px;
    color: #66ccff;
    border-bottom: 1px solid rgba(102, 204, 255, 0.3);
    padding-bottom: 5px;
}

.help-content p {
    margin: 8px 0;
    font-size: 14px;
    line-height: 1.4;
}

.help-content strong {
    color: #ffaa44;
    font-weight: bold;
}

.help-section {
    margin-bottom: 20px;
}

.help-button {
    position: absolute;
    top: 10px;
    right: 10px;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: rgba(0, 255, 136, 0.8);
    color: white;
    border: none;
    font-weight: bold;
    font-size: 16px;
    cursor: pointer;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    z-index: 1500;
}

.help-button:hover {
    background: rgba(0, 255, 136, 1);
    transform: scale(1.1);
    box-shadow: 0 0 20px rgba(0, 255, 136, 0.5);
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: scale(0.9);
    }

    to {
        opacity: 1;
        transform: scale(1);
    }
}

.nav-breadcrumb {
    position: absolute;
    top: 10px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    align-items: center;
    background: rgba(0, 0, 0, 0.7);
    backdrop-filter: blur(15px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 25px;
    padding: 8px 20px;
    z-index: 1400;
    animation: slideInFromTop 0.5s ease-out;
}

.breadcrumb-item {
    color: rgba(255, 255, 255, 0.6);
    font-weight: 500;
    font-size: 14px;
    cursor: pointer;
    transition: all 0.3s ease;
    padding: 4px 8px;
    border-radius: 12px;
}

.breadcrumb-item.active {
    color: #00ff88;
    background: rgba(0, 255, 136, 0.1);
    text-shadow: 0 0 10px rgba(0, 255, 136, 0.3);
}

.breadcrumb-item:hover:not(.active) {
    color: white;
    background: rgba(255, 255, 255, 0.1);
}

.breadcrumb-separator {
    color: rgba(255, 255, 255, 0.3);
    margin: 0 8px;
    font-size: 16px;
}

.detail-panel {
    position: absolute;
    left: 20px;
    top: 80px;
    bottom: 20px;
    width: 350px;
    background: rgba(0, 0, 0, 0.85);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.15);
    border-radius: 15px;
    z-index: 1300;
    animation: slideInFromLeft 0.5s ease-out;
    overflow: hidden;
    display: flex;
    flex-direction: column;
}

.panel-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    background: rgba(0, 255, 136, 0.1);
}

.panel-header h2 {
    margin: 0;
    color: #00ff88;
    font-size: 18px;
    font-weight: 600;
    text-shadow: 0 0 10px rgba(0, 255, 136, 0.3);
}

.panel-close {
    background: none;
    border: none;
    color: rgba(255, 255, 255, 0.6);
    font-size: 24px;
    cursor: pointer;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
}

.panel-close:hover {
    background: rgba(255, 255, 255, 0.1);
    color: white;
}

.panel-content {
    flex: 1;
    overflow-y: auto;
    padding: 0;
}

.detail-info {
    padding: 20px;
}

.info-section {
    margin-bottom: 25px;
}

.info-section h3 {
    margin: 0 0 15px 0;
    font-size: 16px;
    color: #66ccff;
    border-bottom: 1px solid rgba(102, 204, 255, 0.2);
    padding-bottom: 8px;
}

.stats-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 12px;
}

.stat-item {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    padding: 12px;
    text-align: center;
    transition: all 0.3s ease;
}

.stat-item:hover {
    background: rgba(255, 255, 255, 0.08);
    border-color: rgba(255, 255, 255, 0.2);
}

.stat-label {
    display: block;
    font-size: 11px;
    color: rgba(255, 255, 255, 0.6);
    text-transform: uppercase;
    margin-bottom: 4px;
    letter-spacing: 0.5px;
}

.stat-value {
    display: block;
    font-size: 20px;
    font-weight: 700;
    color: #00ff88;
    text-shadow: 0 0 8px rgba(0, 255, 136, 0.4);
}

.panel h3,
.detail-info h3 {
    text-shadow: 0 0 8px rgba(102, 204, 255, 0.4);
    font-weight: 600;
}

.panel p,
.description-text {
    line-height: 1.6;
    font-size: 14px;
}

.action-btn {
    font-size: 15px;
    font-weight: 600;
    letter-spacing: 0.5px;
    text-transform: uppercase;
}

.action-btn.primary {
    box-shadow: 0 0 15px rgba(0, 255, 136, 0.3);
}

.action-btn.primary:hover {
    box-shadow: 0 0 20px rgba(0, 255, 136, 0.5);
}

@media (max-width: 1200px) {
    .detail-panel {
        width: 300px;
    }

    .minimap-container {
        width: 220px;
        height: 220px;
    }
}

@media (max-width: 768px) {
    .detail-panel {
        width: 280px;
        left: 10px;
        top: 10px;
        height: calc(100vh - 20px);
    }

    .minimap-container {
        width: 200px;
        height: 200px;
        right: 10px;
        top: 110px;
    }

    #resource-panel {
        top: 60px;
        padding: 8px 16px;
        gap: 15px;
    }

    .resource {
        min-width: 60px;
        font-size: 12px;
        padding: 3px 8px;
    }
}

canvas {
    z-index: 1 !important;
}

.nav-breadcrumb {
    z-index: 200 !important;
}

#resource-panel {
    z-index: 190 !important;
}

.top-controls {
    z-index: 210 !important;
}

.game-speed-controls {
    z-index: 180 !important;
}

.detail-panel {
    z-index: 150 !important;
}

.panel-toggle {
    z-index: 160 !important;
}

.minimap-container {
    z-index: 140 !important;
}

#performance-hud {
    z-index: 130 !important;
}

.notification {
    z-index: 300 !important;
}

.help-overlay {
    z-index: 1000 !important;
}

.settings-modal,
.settings-overlay {
    z-index: 1100 !important;
}

.action-buttons {
    display: flex;
    flex-direction: column;
    gap: 8px;
}

.action-btn {
    padding: 12px 16px;
    border: none;
    border-radius: 8px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 14px;
    display: flex;
    align-items: center;
    gap: 8px;
    justify-content: center;
}

.action-btn.primary {
    background: #00ff88;
    color: #000;
}

.action-btn.primary:hover {
    background: #00cc6a;
    transform: translateY(-2px);
}

.action-btn.secondary {
    background: rgba(255, 255, 255, 0.1);
    color: white;
    border: 1px solid rgba(255, 255, 255, 0.2);
}

.action-btn.secondary:hover {
    background: rgba(255, 255, 255, 0.15);
    border-color: rgba(255, 255, 255, 0.3);
}

.planet-details {
    display: flex;
    flex-direction: column;
    gap: 8px;
}

.detail-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 8px 12px;
    background: rgba(255, 255, 255, 0.03);
    border-radius: 6px;
    border: 1px solid rgba(255, 255, 255, 0.08);
}

.detail-label {
    font-size: 13px;
    color: rgba(255, 255, 255, 0.7);
    font-weight: 500;
}

.detail-value {
    font-size: 13px;
    color: #66ccff;
    font-weight: 600;
}

.description-text {
    color: rgba(255, 255, 255, 0.8);
    font-size: 13px;
    line-height: 1.5;
    background: rgba(255, 255, 255, 0.03);
    padding: 15px;
    border-radius: 8px;
    border: 1px solid rgba(255, 255, 255, 0.08);
}

@keyframes slideInFromLeft {
    from {
        transform: translateX(-100%);
        opacity: 0;
    }

    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slideInFromRight {
    from {
        transform: translateX(100%);
        opacity: 0;
    }

    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slideInFromBottom {
    from {
        transform: translateX(-50%) translateY(100%);
        opacity: 0;
    }

    to {
        transform: translateX(-50%) translateY(0);
        opacity: 1;
    }
}

@keyframes fadeInScale {
    from {
        transform: translate(-50%, -50%) scale(0.8);
        opacity: 0;
    }

    to {
        transform: translate(-50%, -50%) scale(1);
        opacity: 1;
    }
}

@keyframes slideInFromTop {
    from {
        transform: translateX(-50%) translateY(-100%);
        opacity: 0;
    }

    to {
        transform: translateX(-50%) translateY(0);
        opacity: 1;
    }
}

@property --tw-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-translate-z {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-rotate-x {
    syntax: "*";
    inherits: false;
}

@property --tw-rotate-y {
    syntax: "*";
    inherits: false;
}

@property --tw-rotate-z {
    syntax: "*";
    inherits: false;
}

@property --tw-skew-x {
    syntax: "*";
    inherits: false;
}

@property --tw-skew-y {
    syntax: "*";
    inherits: false;
}

@property --tw-space-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}

@property --tw-gradient-position {
    syntax: "*";
    inherits: false;
}

@property --tw-gradient-from {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-via {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-to {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-stops {
    syntax: "*";
    inherits: false;
}

@property --tw-gradient-via-stops {
    syntax: "*";
    inherits: false;
}

@property --tw-gradient-from-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 0%;
}

@property --tw-gradient-via-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 50%;
}

@property --tw-gradient-to-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-leading {
    syntax: "*";
    inherits: false;
}

@property --tw-font-weight {
    syntax: "*";
    inherits: false;
}

@property --tw-tracking {
    syntax: "*";
    inherits: false;
}

@property --tw-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
    syntax: "*";
    inherits: false;
}

@property --tw-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-inset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
    syntax: "*";
    inherits: false;
}

@property --tw-inset-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-ring-color {
    syntax: "*";
    inherits: false;
}

@property --tw-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
    syntax: "*";
    inherits: false;
}

@property --tw-inset-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
    syntax: "*";
    inherits: false;
}

@property --tw-ring-offset-width {
    syntax: "<length>";
    inherits: false;
    initial-value: 0px;
}

@property --tw-ring-offset-color {
    syntax: "*";
    inherits: false;
    initial-value: #fff;
}

@property --tw-ring-offset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-outline-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}

@property --tw-blur {
    syntax: "*";
    inherits: false;
}

@property --tw-brightness {
    syntax: "*";
    inherits: false;
}

@property --tw-contrast {
    syntax: "*";
    inherits: false;
}

@property --tw-grayscale {
    syntax: "*";
    inherits: false;
}

@property --tw-hue-rotate {
    syntax: "*";
    inherits: false;
}

@property --tw-invert {
    syntax: "*";
    inherits: false;
}

@property --tw-opacity {
    syntax: "*";
    inherits: false;
}

@property --tw-saturate {
    syntax: "*";
    inherits: false;
}

@property --tw-sepia {
    syntax: "*";
    inherits: false;
}

@property --tw-drop-shadow {
    syntax: "*";
    inherits: false;
}

@property --tw-drop-shadow-color {
    syntax: "*";
    inherits: false;
}

@property --tw-drop-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-drop-shadow-size {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-blur {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-brightness {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-contrast {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-grayscale {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-hue-rotate {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-invert {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-opacity {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-saturate {
    syntax: "*";
    inherits: false;
}

@property --tw-backdrop-sepia {
    syntax: "*";
    inherits: false;
}

@property --tw-duration {
    syntax: "*";
    inherits: false;
}

@property --tw-ease {
    syntax: "*";
    inherits: false;
}

@property --tw-scale-x {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-scale-y {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-scale-z {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-content {
    syntax: "*";
    initial-value: "";
    inherits: false;
}

@layer properties {
    @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {

        *,
        ::before,
        ::after,
        ::backdrop {
            --tw-translate-x: 0;
            --tw-translate-y: 0;
            --tw-translate-z: 0;
            --tw-rotate-x: initial;
            --tw-rotate-y: initial;
            --tw-rotate-z: initial;
            --tw-skew-x: initial;
            --tw-skew-y: initial;
            --tw-space-y-reverse: 0;
            --tw-border-style: solid;
            --tw-gradient-position: initial;
            --tw-gradient-from: #0000;
            --tw-gradient-via: #0000;
            --tw-gradient-to: #0000;
            --tw-gradient-stops: initial;
            --tw-gradient-via-stops: initial;
            --tw-gradient-from-position: 0%;
            --tw-gradient-via-position: 50%;
            --tw-gradient-to-position: 100%;
            --tw-leading: initial;
            --tw-font-weight: initial;
            --tw-tracking: initial;
            --tw-shadow: 0 0 #0000;
            --tw-shadow-color: initial;
            --tw-shadow-alpha: 100%;
            --tw-inset-shadow: 0 0 #0000;
            --tw-inset-shadow-color: initial;
            --tw-inset-shadow-alpha: 100%;
            --tw-ring-color: initial;
            --tw-ring-shadow: 0 0 #0000;
            --tw-inset-ring-color: initial;
            --tw-inset-ring-shadow: 0 0 #0000;
            --tw-ring-inset: initial;
            --tw-ring-offset-width: 0px;
            --tw-ring-offset-color: #fff;
            --tw-ring-offset-shadow: 0 0 #0000;
            --tw-outline-style: solid;
            --tw-blur: initial;
            --tw-brightness: initial;
            --tw-contrast: initial;
            --tw-grayscale: initial;
            --tw-hue-rotate: initial;
            --tw-invert: initial;
            --tw-opacity: initial;
            --tw-saturate: initial;
            --tw-sepia: initial;
            --tw-drop-shadow: initial;
            --tw-drop-shadow-color: initial;
            --tw-drop-shadow-alpha: 100%;
            --tw-drop-shadow-size: initial;
            --tw-backdrop-blur: initial;
            --tw-backdrop-brightness: initial;
            --tw-backdrop-contrast: initial;
            --tw-backdrop-grayscale: initial;
            --tw-backdrop-hue-rotate: initial;
            --tw-backdrop-invert: initial;
            --tw-backdrop-opacity: initial;
            --tw-backdrop-saturate: initial;
            --tw-backdrop-sepia: initial;
            --tw-duration: initial;
            --tw-ease: initial;
            --tw-scale-x: 1;
            --tw-scale-y: 1;
            --tw-scale-z: 1;
            --tw-content: "";
        }
    }
}