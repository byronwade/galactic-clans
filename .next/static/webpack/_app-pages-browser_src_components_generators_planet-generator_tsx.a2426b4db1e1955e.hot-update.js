"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_src_components_generators_planet-generator_tsx",{

/***/ "(app-pages-browser)/./src/components/generators/planet-renderer-3d.tsx":
/*!**********************************************************!*\
  !*** ./src/components/generators/planet-renderer-3d.tsx ***!
  \**********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PlanetRenderer3D: () => (/* binding */ PlanetRenderer3D)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.module.js\");\n/**\n * @file planet-renderer-3d.tsx\n * @description Full-screen 3D planet renderer component\n * @version 1.0.0\n * @author Galactic Clans Development Team\n */ /* __next_internal_client_entry_do_not_use__ PlanetRenderer3D auto */ \nvar _s = $RefreshSig$();\n\n\nfunction PlanetRenderer3D(param) {\n    let { config, isLoading, onLoadingChange } = param;\n    _s();\n    const mountRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const sceneRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const cameraRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const rendererRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const planetRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const animationRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Initialize Three.js\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"PlanetRenderer3D.useEffect\": ()=>{\n            if (!mountRef.current) return;\n            // Scene\n            const scene = new three__WEBPACK_IMPORTED_MODULE_2__.Scene();\n            scene.background = new three__WEBPACK_IMPORTED_MODULE_2__.Color(0x000011);\n            sceneRef.current = scene;\n            // Camera\n            const camera = new three__WEBPACK_IMPORTED_MODULE_2__.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n            camera.position.set(0, 0, 8);\n            cameraRef.current = camera;\n            // Renderer\n            const renderer = new three__WEBPACK_IMPORTED_MODULE_2__.WebGLRenderer({\n                antialias: true\n            });\n            renderer.setSize(window.innerWidth, window.innerHeight);\n            renderer.shadowMap.enabled = true;\n            rendererRef.current = renderer;\n            mountRef.current.appendChild(renderer.domElement);\n            // Lights\n            const ambientLight = new three__WEBPACK_IMPORTED_MODULE_2__.AmbientLight(0x404040, 0.4);\n            scene.add(ambientLight);\n            const directionalLight = new three__WEBPACK_IMPORTED_MODULE_2__.DirectionalLight(0xffffff, 1);\n            directionalLight.position.set(5, 5, 5);\n            scene.add(directionalLight);\n            // Stars\n            createStarfield(scene);\n            // Generate initial planet\n            setTimeout({\n                \"PlanetRenderer3D.useEffect\": ()=>{\n                    generatePlanet();\n                }\n            }[\"PlanetRenderer3D.useEffect\"], 100);\n            // Handle resize\n            const handleResize = {\n                \"PlanetRenderer3D.useEffect.handleResize\": ()=>{\n                    if (!cameraRef.current || !rendererRef.current) return;\n                    cameraRef.current.aspect = window.innerWidth / window.innerHeight;\n                    cameraRef.current.updateProjectionMatrix();\n                    rendererRef.current.setSize(window.innerWidth, window.innerHeight);\n                }\n            }[\"PlanetRenderer3D.useEffect.handleResize\"];\n            window.addEventListener(\"resize\", handleResize);\n            // Animation loop\n            const animate = {\n                \"PlanetRenderer3D.useEffect.animate\": ()=>{\n                    if (planetRef.current) {\n                        planetRef.current.rotation.y += 0.005;\n                    }\n                    if (rendererRef.current && sceneRef.current && cameraRef.current) {\n                        rendererRef.current.render(sceneRef.current, cameraRef.current);\n                    }\n                    animationRef.current = requestAnimationFrame(animate);\n                }\n            }[\"PlanetRenderer3D.useEffect.animate\"];\n            animate();\n            // Cleanup\n            return ({\n                \"PlanetRenderer3D.useEffect\": ()=>{\n                    window.removeEventListener(\"resize\", handleResize);\n                    if (animationRef.current) {\n                        cancelAnimationFrame(animationRef.current);\n                    }\n                    if (rendererRef.current && mountRef.current) {\n                        mountRef.current.removeChild(rendererRef.current.domElement);\n                        rendererRef.current.dispose();\n                    }\n                }\n            })[\"PlanetRenderer3D.useEffect\"];\n        }\n    }[\"PlanetRenderer3D.useEffect\"], []);\n    // Create starfield\n    const createStarfield = (scene)=>{\n        const starGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.BufferGeometry();\n        const starCount = 1000;\n        const positions = new Float32Array(starCount * 3);\n        for(let i = 0; i < starCount * 3; i += 3){\n            positions[i] = (Math.random() - 0.5) * 2000;\n            positions[i + 1] = (Math.random() - 0.5) * 2000;\n            positions[i + 2] = (Math.random() - 0.5) * 2000;\n        }\n        starGeometry.setAttribute(\"position\", new three__WEBPACK_IMPORTED_MODULE_2__.BufferAttribute(positions, 3));\n        const starMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.PointsMaterial({\n            color: 0xffffff,\n            size: 1\n        });\n        const stars = new three__WEBPACK_IMPORTED_MODULE_2__.Points(starGeometry, starMaterial);\n        scene.add(stars);\n    };\n    // Generate planet\n    const generatePlanet = ()=>{\n        if (!sceneRef.current) return;\n        onLoadingChange(true);\n        // Remove old planet\n        if (planetRef.current) {\n            sceneRef.current.remove(planetRef.current);\n        }\n        // Create new planet group\n        const planetGroup = new three__WEBPACK_IMPORTED_MODULE_2__.Group();\n        // Main planet\n        const geometry = new three__WEBPACK_IMPORTED_MODULE_2__.SphereGeometry(config.radius, 32, 32);\n        const material = new three__WEBPACK_IMPORTED_MODULE_2__.MeshLambertMaterial({\n            color: config.color,\n            transparent: true,\n            opacity: 0.95\n        });\n        const planet = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(geometry, material);\n        planetGroup.add(planet);\n        // Add atmosphere\n        if (config.hasAtmosphere) {\n            const atmosphereGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.SphereGeometry(config.radius * 1.05, 32, 32);\n            const atmosphereMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.MeshBasicMaterial({\n                color: 0x87ceeb,\n                transparent: true,\n                opacity: 0.2,\n                side: three__WEBPACK_IMPORTED_MODULE_2__.BackSide\n            });\n            const atmosphere = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(atmosphereGeometry, atmosphereMaterial);\n            planetGroup.add(atmosphere);\n        }\n        // Add rings\n        if (config.hasRings) {\n            const ringGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.RingGeometry(config.radius * 1.2, config.radius * 1.8, 64);\n            const ringMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.MeshBasicMaterial({\n                color: 0xcccccc,\n                transparent: true,\n                opacity: 0.6,\n                side: three__WEBPACK_IMPORTED_MODULE_2__.DoubleSide\n            });\n            const rings = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(ringGeometry, ringMaterial);\n            rings.rotation.x = Math.PI / 2;\n            planetGroup.add(rings);\n        }\n        // Add moons\n        if (config.hasMoons) {\n            for(let i = 0; i < 2; i++){\n                const moonGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.SphereGeometry(0.2, 16, 16);\n                const moonMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.MeshLambertMaterial({\n                    color: 0x888888\n                });\n                const moon = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(moonGeometry, moonMaterial);\n                const angle = i / 2 * Math.PI * 2;\n                const distance = config.radius + 1 + i * 0.5;\n                moon.position.set(Math.cos(angle) * distance, Math.sin(angle) * distance * 0.3, Math.sin(angle) * distance * 0.7);\n                planetGroup.add(moon);\n            }\n        }\n        planetRef.current = planetGroup;\n        sceneRef.current.add(planetGroup);\n        setTimeout(()=>onLoadingChange(false), 500);\n    };\n    // Update planet when config changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"PlanetRenderer3D.useEffect\": ()=>{\n            if (sceneRef.current) {\n                generatePlanet();\n            }\n        }\n    }[\"PlanetRenderer3D.useEffect\"], [\n        config\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"absolute inset-0 pt-16\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            ref: mountRef,\n            className: \"w-full h-full\"\n        }, void 0, false, {\n            fileName: \"/Users/byronwade/cosmic/src/components/generators/planet-renderer-3d.tsx\",\n            lineNumber: 215,\n            columnNumber: 4\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/byronwade/cosmic/src/components/generators/planet-renderer-3d.tsx\",\n        lineNumber: 214,\n        columnNumber: 3\n    }, this);\n}\n_s(PlanetRenderer3D, \"6lZmxm23sSIug3YpuiDsLnzpbFs=\");\n_c = PlanetRenderer3D;\nvar _c;\n$RefreshReg$(_c, \"PlanetRenderer3D\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/generators/planet-renderer-3d.tsx\n"));

/***/ })

});