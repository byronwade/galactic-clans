"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_src_components_generators_fps-explorer-generator_tsx",{

/***/ "(app-pages-browser)/./src/components/generators/fps-renderer-3d.tsx":
/*!*******************************************************!*\
  !*** ./src/components/generators/fps-renderer-3d.tsx ***!
  \*******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FPSRenderer3D: () => (/* binding */ FPSRenderer3D),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-three/fiber */ \"(app-pages-browser)/./node_modules/@react-three/fiber/dist/events-cf57b220.esm.js\");\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @react-three/fiber */ \"(app-pages-browser)/./node_modules/@react-three/fiber/dist/react-three-fiber.esm.js\");\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @react-three/drei */ \"(app-pages-browser)/./node_modules/@react-three/drei/core/Sky.js\");\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @react-three/drei */ \"(app-pages-browser)/./node_modules/@react-three/drei/core/Stars.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var simplex_noise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! simplex-noise */ \"(app-pages-browser)/./node_modules/simplex-noise/dist/esm/simplex-noise.js\");\n/* harmony import */ var _react_three_drei__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @react-three/drei */ \"(app-pages-browser)/./node_modules/@react-three/drei/web/Html.js\");\n/**\n * @file fps-renderer-3d.tsx\n * @description Professional AAA-Quality FPS Renderer\n * @version 2.0.0\n * @author Galactic Clans Development Team\n *\n * Professional FPS Implementation Features:\n * - Smooth first-person camera with proper physics\n * - Realistic terrain generation with proper collision\n * - Advanced lighting system with day/night cycle\n * - Call of Duty style movement and controls\n * - Performance optimized with LOD and culling\n * - Professional visual effects and atmosphere\n */ /* __next_internal_client_entry_do_not_use__ FPSRenderer3D,default auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$();\n\n\n\n\n\n\n// Professional FPS Camera Controller\nfunction FPSCamera(param) {\n    let { config, inputManager } = param;\n    _s();\n    const { camera, gl } = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_3__.C)();\n    const velocityRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new three__WEBPACK_IMPORTED_MODULE_4__.Vector3(0, 0, 0));\n    const directionRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new three__WEBPACK_IMPORTED_MODULE_4__.Vector3(0, 0, -1));\n    const isGroundedRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(true);\n    const jumpCooldownRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    const airTimeRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    const [isPointerLocked, setIsPointerLocked] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Advanced movement state\n    const [movementState, setMovementState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        isSliding: false,\n        isWallRunning: false,\n        canMantle: false,\n        slideTimer: 0,\n        lastGroundedTime: 0\n    });\n    // Player physics state\n    const [playerState, setPlayerState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        health: 100,\n        stamina: 100,\n        speed: config.player.walkSpeed,\n        isRunning: false,\n        isCrouching: false,\n        isJumping: false,\n        isAiming: false\n    });\n    // Weapon sway and breathing effects\n    const weaponSwayRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({\n        time: 0,\n        breathingIntensity: 1.0,\n        movementSway: new three__WEBPACK_IMPORTED_MODULE_4__.Vector3(),\n        breathingSway: new three__WEBPACK_IMPORTED_MODULE_4__.Vector3()\n    });\n    // Terrain collision detection\n    const getTerrainHeight = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"FPSCamera.useCallback[getTerrainHeight]\": (x, z)=>{\n            // Simplified terrain height calculation - matches terrain generation\n            const noise = (0,simplex_noise__WEBPACK_IMPORTED_MODULE_2__.createNoise2D)();\n            let height = 0;\n            height += noise(x * 0.02, z * 0.02) * 15; // Main terrain features\n            height += noise(x * 0.1, z * 0.1) * 3; // Small details\n            height += noise(x * 0.3, z * 0.3) * 1; // Fine details\n            return Math.max(height, 0); // Prevent going below sea level\n        }\n    }[\"FPSCamera.useCallback[getTerrainHeight]\"], []);\n    // Initialize camera properties\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FPSCamera.useEffect\": ()=>{\n            if (camera instanceof three__WEBPACK_IMPORTED_MODULE_4__.PerspectiveCamera) {\n                camera.fov = config.player.fov;\n                camera.near = 0.1;\n                camera.far = 1000;\n                // Set initial position on ground level\n                const initialX = 0;\n                const initialZ = 0;\n                const terrainHeight = getTerrainHeight(initialX, initialZ);\n                const playerHeight = 1.8;\n                camera.position.set(initialX, terrainHeight + playerHeight, initialZ);\n                // Set initial rotation to look forward (along negative Z axis)\n                camera.rotation.set(0, 0, 0);\n                camera.lookAt(initialX, terrainHeight + playerHeight, initialZ - 1);\n                camera.updateProjectionMatrix();\n                console.log(\"\\uD83C\\uDFAE [FPS] Camera initialized at position: (\".concat(camera.position.x.toFixed(1), \", \").concat(camera.position.y.toFixed(1), \", \").concat(camera.position.z.toFixed(1), \")\"));\n            }\n        }\n    }[\"FPSCamera.useEffect\"], [\n        camera,\n        config.player.fov,\n        getTerrainHeight\n    ]);\n    // Handle pointer lock events\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FPSCamera.useEffect\": ()=>{\n            const handlePointerLockChange = {\n                \"FPSCamera.useEffect.handlePointerLockChange\": ()=>{\n                    setIsPointerLocked(document.pointerLockElement === gl.domElement);\n                }\n            }[\"FPSCamera.useEffect.handlePointerLockChange\"];\n            const handlePointerLockError = {\n                \"FPSCamera.useEffect.handlePointerLockError\": ()=>{\n                    console.warn('ðŸŽ® [FPS] Pointer lock failed');\n                    setIsPointerLocked(false);\n                }\n            }[\"FPSCamera.useEffect.handlePointerLockError\"];\n            const handleClick = {\n                \"FPSCamera.useEffect.handleClick\": ()=>{\n                    if (!isPointerLocked) {\n                        gl.domElement.requestPointerLock();\n                    }\n                }\n            }[\"FPSCamera.useEffect.handleClick\"];\n            const handleKeyDown = {\n                \"FPSCamera.useEffect.handleKeyDown\": (event)=>{\n                    if (event.code === 'Escape' && isPointerLocked) {\n                        document.exitPointerLock();\n                    }\n                }\n            }[\"FPSCamera.useEffect.handleKeyDown\"];\n            document.addEventListener('pointerlockchange', handlePointerLockChange);\n            document.addEventListener('pointerlockerror', handlePointerLockError);\n            document.addEventListener('keydown', handleKeyDown);\n            gl.domElement.addEventListener('click', handleClick);\n            return ({\n                \"FPSCamera.useEffect\": ()=>{\n                    document.removeEventListener('pointerlockchange', handlePointerLockChange);\n                    document.removeEventListener('pointerlockerror', handlePointerLockError);\n                    document.removeEventListener('keydown', handleKeyDown);\n                    gl.domElement.removeEventListener('click', handleClick);\n                }\n            })[\"FPSCamera.useEffect\"];\n        }\n    }[\"FPSCamera.useEffect\"], [\n        gl.domElement,\n        isPointerLocked\n    ]);\n    // Manual mouse handling for FPS camera\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FPSCamera.useEffect\": ()=>{\n            const handleMouseMove = {\n                \"FPSCamera.useEffect.handleMouseMove\": (event)=>{\n                    if (!isPointerLocked) return;\n                    const sensitivity = config.player.mouseSensitivity * 0.002;\n                    const deltaX = event.movementX * sensitivity;\n                    const deltaY = event.movementY * sensitivity;\n                    // Update camera rotation\n                    camera.rotation.y -= deltaX;\n                    camera.rotation.x -= deltaY;\n                    // Clamp vertical rotation\n                    camera.rotation.x = Math.max(-Math.PI / 2, Math.min(Math.PI / 2, camera.rotation.x));\n                }\n            }[\"FPSCamera.useEffect.handleMouseMove\"];\n            if (isPointerLocked) {\n                document.addEventListener('mousemove', handleMouseMove);\n            }\n            return ({\n                \"FPSCamera.useEffect\": ()=>{\n                    document.removeEventListener('mousemove', handleMouseMove);\n                }\n            })[\"FPSCamera.useEffect\"];\n        }\n    }[\"FPSCamera.useEffect\"], [\n        isPointerLocked,\n        camera,\n        config.player.mouseSensitivity\n    ]);\n    // Advanced movement mechanics\n    const handleAdvancedMovement = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"FPSCamera.useCallback[handleAdvancedMovement]\": (inputState, velocity, delta)=>{\n            // Sliding mechanics\n            if (inputState.slide && !movementState.isSliding && velocity.length() > 8) {\n                setMovementState({\n                    \"FPSCamera.useCallback[handleAdvancedMovement]\": (prev)=>({\n                            ...prev,\n                            isSliding: true,\n                            slideTimer: 1.5\n                        })\n                }[\"FPSCamera.useCallback[handleAdvancedMovement]\"]);\n            }\n            if (movementState.isSliding) {\n                const slideDeceleration = 15; // Deceleration rate\n                const newSlideTimer = Math.max(0, movementState.slideTimer - delta);\n                if (newSlideTimer <= 0 || velocity.length() < 2) {\n                    setMovementState({\n                        \"FPSCamera.useCallback[handleAdvancedMovement]\": (prev)=>({\n                                ...prev,\n                                isSliding: false,\n                                slideTimer: 0\n                            })\n                    }[\"FPSCamera.useCallback[handleAdvancedMovement]\"]);\n                } else {\n                    // Apply slide momentum\n                    velocity.multiplyScalar(Math.max(0.7, 1 - delta * slideDeceleration));\n                    setMovementState({\n                        \"FPSCamera.useCallback[handleAdvancedMovement]\": (prev)=>({\n                                ...prev,\n                                slideTimer: newSlideTimer\n                            })\n                    }[\"FPSCamera.useCallback[handleAdvancedMovement]\"]);\n                }\n            }\n            // Air control (reduced effectiveness)\n            if (!isGroundedRef.current) {\n                airTimeRef.current += delta;\n                // Reduce air control effectiveness\n                const airControlFactor = Math.max(0.1, 1 - airTimeRef.current * 0.5);\n                velocity.x *= airControlFactor;\n                velocity.z *= airControlFactor;\n            } else {\n                airTimeRef.current = 0;\n            }\n            // Coyote time (grace period for jumping after leaving ground)\n            if (isGroundedRef.current) {\n                setMovementState({\n                    \"FPSCamera.useCallback[handleAdvancedMovement]\": (prev)=>({\n                            ...prev,\n                            lastGroundedTime: Date.now()\n                        })\n                }[\"FPSCamera.useCallback[handleAdvancedMovement]\"]);\n            }\n            const coyoteTime = 150; // milliseconds\n            const canCoyoteJump = Date.now() - movementState.lastGroundedTime < coyoteTime;\n            // Enhanced jumping with coyote time\n            if (inputState.jump && (isGroundedRef.current || canCoyoteJump) && jumpCooldownRef.current <= 0) {\n                velocity.y = 12;\n                isGroundedRef.current = false;\n                jumpCooldownRef.current = 0.5;\n                setPlayerState({\n                    \"FPSCamera.useCallback[handleAdvancedMovement]\": (prev)=>({\n                            ...prev,\n                            isJumping: true\n                        })\n                }[\"FPSCamera.useCallback[handleAdvancedMovement]\"]);\n            }\n        }\n    }[\"FPSCamera.useCallback[handleAdvancedMovement]\"], [\n        movementState\n    ]);\n    // Weapon sway and breathing system\n    const updateWeaponSway = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"FPSCamera.useCallback[updateWeaponSway]\": (delta, isMoving, isAiming)=>{\n            const sway = weaponSwayRef.current;\n            sway.time += delta;\n            // Breathing effect (reduced when aiming)\n            const breathingRate = isAiming ? 0.5 : 1.0;\n            const breathingAmplitude = isAiming ? 0.3 : 1.0;\n            sway.breathingIntensity = three__WEBPACK_IMPORTED_MODULE_4__.MathUtils.lerp(sway.breathingIntensity, breathingAmplitude, delta * 2);\n            sway.breathingSway.x = Math.sin(sway.time * breathingRate) * 0.001 * sway.breathingIntensity;\n            sway.breathingSway.y = Math.sin(sway.time * breathingRate * 0.5) * 0.0005 * sway.breathingIntensity;\n            // Movement sway\n            if (isMoving && !isAiming) {\n                const movementIntensity = playerState.isRunning ? 1.5 : 1.0;\n                sway.movementSway.x = Math.sin(sway.time * 8) * 0.002 * movementIntensity;\n                sway.movementSway.y = Math.sin(sway.time * 16) * 0.001 * movementIntensity;\n                sway.movementSway.z = Math.sin(sway.time * 6) * 0.0015 * movementIntensity;\n            } else {\n                sway.movementSway.lerp(new three__WEBPACK_IMPORTED_MODULE_4__.Vector3(), delta * 5);\n            }\n            // Apply weapon sway to camera\n            const totalSway = new three__WEBPACK_IMPORTED_MODULE_4__.Vector3().add(sway.breathingSway).add(sway.movementSway);\n            camera.rotation.x += totalSway.x;\n            camera.rotation.y += totalSway.y;\n            camera.rotation.z += totalSway.z;\n        }\n    }[\"FPSCamera.useCallback[updateWeaponSway]\"], [\n        camera,\n        playerState.isRunning\n    ]);\n    // Professional movement physics\n    (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_3__.D)({\n        \"FPSCamera.useFrame\": (state, delta)=>{\n            if (!(inputManager === null || inputManager === void 0 ? void 0 : inputManager.getInputState)) return;\n            const inputState = inputManager.getInputState();\n            const velocity = velocityRef.current;\n            const direction = directionRef.current;\n            // Update jump cooldown\n            jumpCooldownRef.current = Math.max(0, jumpCooldownRef.current - delta);\n            // Get camera direction vectors\n            camera.getWorldDirection(direction);\n            const rightVector = new three__WEBPACK_IMPORTED_MODULE_4__.Vector3();\n            rightVector.crossVectors(direction, camera.up).normalize();\n            // Calculate movement input\n            const moveDirection = new three__WEBPACK_IMPORTED_MODULE_4__.Vector3(0, 0, 0);\n            const isMoving = inputState.forward || inputState.backward || inputState.left || inputState.right;\n            if (inputState.forward) moveDirection.add(direction);\n            if (inputState.backward) moveDirection.sub(direction);\n            if (inputState.left) moveDirection.sub(rightVector);\n            if (inputState.right) moveDirection.add(rightVector);\n            // Normalize horizontal movement\n            moveDirection.y = 0;\n            if (moveDirection.length() > 0) {\n                moveDirection.normalize();\n            }\n            // Calculate speed based on state\n            let currentSpeed = config.player.walkSpeed;\n            let staminaDrain = 0;\n            // Enhanced speed calculations\n            if (movementState.isSliding) {\n                currentSpeed = config.player.runSpeed * 1.3; // Sliding is faster\n            } else if (inputState.run && playerState.stamina > 0 && isGroundedRef.current) {\n                currentSpeed = config.player.runSpeed;\n                staminaDrain = 25;\n                setPlayerState({\n                    \"FPSCamera.useFrame\": (prev)=>({\n                            ...prev,\n                            isRunning: true\n                        })\n                }[\"FPSCamera.useFrame\"]);\n            } else {\n                setPlayerState({\n                    \"FPSCamera.useFrame\": (prev)=>({\n                            ...prev,\n                            isRunning: false\n                        })\n                }[\"FPSCamera.useFrame\"]);\n            }\n            if (inputState.crouch && !movementState.isSliding) {\n                currentSpeed = config.player.crouchSpeed;\n                setPlayerState({\n                    \"FPSCamera.useFrame\": (prev)=>({\n                            ...prev,\n                            isCrouching: true\n                        })\n                }[\"FPSCamera.useFrame\"]);\n            } else {\n                setPlayerState({\n                    \"FPSCamera.useFrame\": (prev)=>({\n                            ...prev,\n                            isCrouching: false\n                        })\n                }[\"FPSCamera.useFrame\"]);\n            }\n            // Advanced movement physics with proper acceleration curves\n            const targetVelocity = moveDirection.multiplyScalar(currentSpeed);\n            const acceleration = isGroundedRef.current ? 20 : 5; // Less air control\n            // Smooth acceleration with easing\n            const accelFactor = 1 - Math.pow(0.001, delta);\n            velocity.x = three__WEBPACK_IMPORTED_MODULE_4__.MathUtils.lerp(velocity.x, targetVelocity.x, acceleration * delta * accelFactor);\n            velocity.z = three__WEBPACK_IMPORTED_MODULE_4__.MathUtils.lerp(velocity.z, targetVelocity.z, acceleration * delta * accelFactor);\n            // Handle advanced movement mechanics\n            handleAdvancedMovement(inputState, velocity, delta);\n            // Gravity and vertical physics\n            if (!isGroundedRef.current) {\n                velocity.y -= 30 * delta; // Gravity\n            }\n            // Apply velocity to camera position\n            const newPosition = camera.position.clone();\n            newPosition.add(velocity.clone().multiplyScalar(delta));\n            // Terrain collision with enhanced detection\n            const terrainHeight = getTerrainHeight(newPosition.x, newPosition.z);\n            const playerHeight = movementState.isSliding ? 1.0 : playerState.isCrouching ? 1.2 : 1.8;\n            if (newPosition.y <= terrainHeight + playerHeight) {\n                newPosition.y = terrainHeight + playerHeight;\n                velocity.y = 0;\n                isGroundedRef.current = true;\n                setPlayerState({\n                    \"FPSCamera.useFrame\": (prev)=>({\n                            ...prev,\n                            isJumping: false\n                        })\n                }[\"FPSCamera.useFrame\"]);\n            } else {\n                isGroundedRef.current = false;\n            }\n            // Update camera position\n            camera.position.copy(newPosition);\n            // Update weapon sway and breathing\n            updateWeaponSway(delta, isMoving, inputState.aim || false);\n            // Update stamina with enhanced recovery\n            const staminaRecovery = playerState.isRunning ? 0 : isMoving ? 10 : 20;\n            setPlayerState({\n                \"FPSCamera.useFrame\": (prev)=>({\n                        ...prev,\n                        stamina: Math.max(0, Math.min(100, prev.stamina - staminaDrain * delta + staminaRecovery * delta)),\n                        isAiming: inputState.aim || false\n                    })\n            }[\"FPSCamera.useFrame\"]);\n        }\n    }[\"FPSCamera.useFrame\"]);\n    // Render click-to-activate overlay if pointer not locked\n    if (!isPointerLocked) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_react_three_drei__WEBPACK_IMPORTED_MODULE_5__.Html, {\n                center: true,\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"pointer-events-auto text-center p-6 bg-black/80 backdrop-blur-sm rounded-lg border border-green-400/30\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-white mb-2 text-lg font-semibold\",\n                            children: \"\\uD83C\\uDFAE FPS Controls\"\n                        }, void 0, false, {\n                            fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n                            lineNumber: 351,\n                            columnNumber: 7\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-green-400 text-sm mb-3\",\n                            children: \"Click anywhere to activate mouse look\"\n                        }, void 0, false, {\n                            fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n                            lineNumber: 352,\n                            columnNumber: 7\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-xs text-slate-300\",\n                            children: \"Use WASD to move â€¢ Mouse to look around â€¢ Shift to run\"\n                        }, void 0, false, {\n                            fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n                            lineNumber: 353,\n                            columnNumber: 7\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n                    lineNumber: 350,\n                    columnNumber: 6\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n                lineNumber: 349,\n                columnNumber: 5\n            }, this)\n        }, void 0, false);\n    }\n    return null; // Camera controls are handled by useFrame\n}\n_s(FPSCamera, \"wD7BjcbwF9lL3CqNLfuQTT5USac=\", false, function() {\n    return [\n        _react_three_fiber__WEBPACK_IMPORTED_MODULE_3__.C,\n        _react_three_fiber__WEBPACK_IMPORTED_MODULE_3__.D\n    ];\n});\n_c = FPSCamera;\n// Professional Terrain System with LOD\nfunction TerrainSystem(param) {\n    let { config } = param;\n    _s1();\n    const terrainRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const chunksRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new Map());\n    const { camera } = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_3__.C)();\n    const noise = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"TerrainSystem.useMemo[noise]\": ()=>(0,simplex_noise__WEBPACK_IMPORTED_MODULE_2__.createNoise2D)()\n    }[\"TerrainSystem.useMemo[noise]\"], []);\n    // Terrain height calculation function\n    const getTerrainHeight = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"TerrainSystem.useCallback[getTerrainHeight]\": (x, z)=>{\n            let height = 0;\n            height += noise(x * 0.02, z * 0.02) * 15; // Main landscape\n            height += noise(x * 0.05, z * 0.05) * 8; // Hills\n            height += noise(x * 0.1, z * 0.1) * 3; // Details\n            height += noise(x * 0.3, z * 0.3) * 1; // Fine noise\n            return Math.max(height, -5);\n        }\n    }[\"TerrainSystem.useCallback[getTerrainHeight]\"], [\n        noise\n    ]);\n    // Generate high-quality terrain chunk\n    const generateTerrainChunk = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"TerrainSystem.useCallback[generateTerrainChunk]\": function(chunkX, chunkZ) {\n            let detail = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 64;\n            const chunkSize = 50;\n            const geometry = new three__WEBPACK_IMPORTED_MODULE_4__.PlaneGeometry(chunkSize, chunkSize, detail - 1, detail - 1);\n            const positionAttribute = geometry.attributes.position;\n            if (!positionAttribute) return null;\n            const vertices = positionAttribute.array;\n            // Generate realistic terrain heights\n            for(let i = 0; i < vertices.length; i += 3){\n                var _vertices_i;\n                const x = ((_vertices_i = vertices[i]) !== null && _vertices_i !== void 0 ? _vertices_i : 0) + chunkX * chunkSize;\n                var _vertices_;\n                const z = ((_vertices_ = vertices[i + 2]) !== null && _vertices_ !== void 0 ? _vertices_ : 0) + chunkZ * chunkSize;\n                // Use the shared terrain height function\n                vertices[i + 1] = getTerrainHeight(x, z);\n            }\n            positionAttribute.needsUpdate = true;\n            geometry.computeVertexNormals();\n            // Enhanced terrain material with better visibility\n            const material = new three__WEBPACK_IMPORTED_MODULE_4__.MeshLambertMaterial({\n                color: new three__WEBPACK_IMPORTED_MODULE_4__.Color(0.2, 0.8, 0.3),\n                transparent: false,\n                side: three__WEBPACK_IMPORTED_MODULE_4__.DoubleSide,\n                wireframe: false\n            });\n            const mesh = new three__WEBPACK_IMPORTED_MODULE_4__.Mesh(geometry, material);\n            mesh.position.set(chunkX * chunkSize, 0, chunkZ * chunkSize);\n            mesh.rotation.x = -Math.PI / 2;\n            mesh.receiveShadow = true;\n            mesh.castShadow = false;\n            // Debug logging\n            console.log(\"Generated terrain chunk at (\".concat(chunkX, \", \").concat(chunkZ, \") with \").concat(vertices.length / 3, \" vertices\"));\n            return mesh;\n        }\n    }[\"TerrainSystem.useCallback[generateTerrainChunk]\"], [\n        noise\n    ]);\n    // Ensure initial chunks are loaded immediately\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"TerrainSystem.useEffect\": ()=>{\n            const initialChunks = [\n                [\n                    0,\n                    0\n                ],\n                [\n                    -1,\n                    0\n                ],\n                [\n                    1,\n                    0\n                ],\n                [\n                    0,\n                    -1\n                ],\n                [\n                    0,\n                    1\n                ],\n                [\n                    -1,\n                    -1\n                ],\n                [\n                    -1,\n                    1\n                ],\n                [\n                    1,\n                    -1\n                ],\n                [\n                    1,\n                    1\n                ]\n            ];\n            console.log('Loading initial terrain chunks...');\n            initialChunks.forEach({\n                \"TerrainSystem.useEffect\": (chunk)=>{\n                    const [x, z] = chunk;\n                    const chunkKey = \"\".concat(x, \",\").concat(z);\n                    if (!chunksRef.current.has(chunkKey)) {\n                        const terrainChunk = generateTerrainChunk(x, z, 64);\n                        if (terrainChunk && terrainRef.current) {\n                            terrainRef.current.add(terrainChunk);\n                            chunksRef.current.set(chunkKey, terrainChunk);\n                            console.log(\"Added initial chunk: \".concat(chunkKey));\n                        }\n                    }\n                }\n            }[\"TerrainSystem.useEffect\"]);\n        }\n    }[\"TerrainSystem.useEffect\"], [\n        generateTerrainChunk\n    ]);\n    // Dynamic chunk loading with LOD\n    (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_3__.D)({\n        \"TerrainSystem.useFrame\": ()=>{\n            const playerPos = camera.position;\n            const chunkSize = 50;\n            const renderDistance = 5; // Increased render distance\n            const playerChunkX = Math.floor(playerPos.x / chunkSize);\n            const playerChunkZ = Math.floor(playerPos.z / chunkSize);\n            // Debug: Log player position and chunk info occasionally\n            if (Math.random() < 0.01) {\n                console.log(\"Player position: (\".concat(playerPos.x.toFixed(1), \", \").concat(playerPos.y.toFixed(1), \", \").concat(playerPos.z.toFixed(1), \")\"));\n                console.log(\"Current chunk: (\".concat(playerChunkX, \", \").concat(playerChunkZ, \"), Loaded chunks: \").concat(chunksRef.current.size));\n                const terrainHeight = getTerrainHeight(playerPos.x, playerPos.z);\n                console.log(\"Terrain height at player position: \".concat(terrainHeight.toFixed(2)));\n            }\n            // Load chunks around player\n            for(let x = playerChunkX - renderDistance; x <= playerChunkX + renderDistance; x++){\n                for(let z = playerChunkZ - renderDistance; z <= playerChunkZ + renderDistance; z++){\n                    const chunkKey = \"\".concat(x, \",\").concat(z);\n                    if (!chunksRef.current.has(chunkKey)) {\n                        const distance = Math.sqrt((x - playerChunkX) ** 2 + (z - playerChunkZ) ** 2);\n                        const detail = distance < 2 ? 64 : distance < 3 ? 32 : 16; // LOD based on distance\n                        const chunk = generateTerrainChunk(x, z, detail);\n                        if (chunk && terrainRef.current) {\n                            terrainRef.current.add(chunk);\n                            chunksRef.current.set(chunkKey, chunk);\n                        }\n                    }\n                }\n            }\n            // Unload distant chunks\n            const chunksToRemove = [];\n            chunksRef.current.forEach({\n                \"TerrainSystem.useFrame\": (chunk, key)=>{\n                    const [x, z] = key.split(',').map(Number);\n                    if (x !== undefined && z !== undefined) {\n                        const distance = Math.sqrt((x - playerChunkX) ** 2 + (z - playerChunkZ) ** 2);\n                        if (distance > renderDistance + 2) {\n                            chunksToRemove.push(key);\n                            if (terrainRef.current) {\n                                terrainRef.current.remove(chunk);\n                            }\n                            chunk.geometry.dispose();\n                            chunk.material.dispose();\n                        }\n                    }\n                }\n            }[\"TerrainSystem.useFrame\"]);\n            chunksToRemove.forEach({\n                \"TerrainSystem.useFrame\": (key)=>chunksRef.current.delete(key)\n            }[\"TerrainSystem.useFrame\"]);\n        }\n    }[\"TerrainSystem.useFrame\"]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"group\", {\n        ref: terrainRef,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"mesh\", {\n            position: [\n                0,\n                -10,\n                0\n            ],\n            rotation: [\n                -Math.PI / 2,\n                0,\n                0\n            ],\n            receiveShadow: true,\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"planeGeometry\", {\n                    args: [\n                        2000,\n                        2000\n                    ]\n                }, void 0, false, {\n                    fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n                    lineNumber: 509,\n                    columnNumber: 5\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meshLambertMaterial\", {\n                    color: new three__WEBPACK_IMPORTED_MODULE_4__.Color(0.2, 0.4, 0.1)\n                }, void 0, false, {\n                    fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n                    lineNumber: 510,\n                    columnNumber: 5\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n            lineNumber: 508,\n            columnNumber: 4\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n        lineNumber: 506,\n        columnNumber: 3\n    }, this);\n}\n_s1(TerrainSystem, \"2cL7vraB7mDT9Z5QGsFU4+s3KMk=\", false, function() {\n    return [\n        _react_three_fiber__WEBPACK_IMPORTED_MODULE_3__.C,\n        _react_three_fiber__WEBPACK_IMPORTED_MODULE_3__.D\n    ];\n});\n_c1 = TerrainSystem;\n// Professional Lighting and Environment\nfunction Environment(param) {\n    let { config } = param;\n    _s2();\n    const [timeOfDay, setTimeOfDay] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0.3); // Start at daytime\n    (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_3__.D)({\n        \"Environment.useFrame\": (state, delta)=>{\n            // Slower day/night cycle for testing\n            setTimeOfDay({\n                \"Environment.useFrame\": (prev)=>(prev + delta * 0.005) % 1\n            }[\"Environment.useFrame\"]);\n        }\n    }[\"Environment.useFrame\"]);\n    const sunAngle = timeOfDay * Math.PI * 2;\n    const sunHeight = Math.sin(sunAngle);\n    const sunIntensity = Math.max(0.1, sunHeight * 1.2);\n    const sunPosition = new three__WEBPACK_IMPORTED_MODULE_4__.Vector3(Math.cos(sunAngle) * 100, Math.max(10, sunHeight * 80), Math.sin(sunAngle) * 100);\n    // More realistic sky colors based on time of day\n    const skyColor = new three__WEBPACK_IMPORTED_MODULE_4__.Color();\n    if (sunHeight > 0.1) {\n        // Daytime: Blue sky\n        skyColor.setHex(0x87CEEB);\n    } else if (sunHeight > -0.1) {\n        // Sunset/sunrise: Orange/red\n        skyColor.setHex(0xFFB366);\n    } else {\n        // Night: Dark blue\n        skyColor.setHex(0x001122);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"group\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_react_three_drei__WEBPACK_IMPORTED_MODULE_6__.Sky, {\n                distance: 450000,\n                sunPosition: sunPosition,\n                inclination: 0,\n                azimuth: 0.25,\n                turbidity: 8,\n                rayleigh: 2,\n                mieCoefficient: 0.005,\n                mieDirectionalG: 0.8\n            }, void 0, false, {\n                fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n                lineNumber: 551,\n                columnNumber: 4\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ambientLight\", {\n                intensity: Math.max(0.2, sunHeight * 0.5),\n                color: new three__WEBPACK_IMPORTED_MODULE_4__.Color(0.6, 0.7, 1.0)\n            }, void 0, false, {\n                fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n                lineNumber: 563,\n                columnNumber: 4\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"directionalLight\", {\n                position: sunPosition,\n                intensity: sunIntensity,\n                color: new three__WEBPACK_IMPORTED_MODULE_4__.Color(1, 0.95, 0.8),\n                castShadow: true,\n                \"shadow-mapSize-width\": 2048,\n                \"shadow-mapSize-height\": 2048,\n                \"shadow-camera-far\": 200,\n                \"shadow-camera-left\": -50,\n                \"shadow-camera-right\": 50,\n                \"shadow-camera-top\": 50,\n                \"shadow-camera-bottom\": -50,\n                \"shadow-bias\": -0.0001\n            }, void 0, false, {\n                fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n                lineNumber: 568,\n                columnNumber: 4\n            }, this),\n            sunHeight < 0.1 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_react_three_drei__WEBPACK_IMPORTED_MODULE_7__.Stars, {\n                radius: 300,\n                depth: 50,\n                count: 5000,\n                factor: 4,\n                saturation: 0,\n                fade: true\n            }, void 0, false, {\n                fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n                lineNumber: 585,\n                columnNumber: 5\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"fog\", {\n                attach: \"fog\",\n                args: [\n                    skyColor,\n                    20,\n                    300\n                ]\n            }, void 0, false, {\n                fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n                lineNumber: 596,\n                columnNumber: 4\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n        lineNumber: 549,\n        columnNumber: 3\n    }, this);\n}\n_s2(Environment, \"e9xbwuq0hS8AsfIdihc87q3gC40=\", false, function() {\n    return [\n        _react_three_fiber__WEBPACK_IMPORTED_MODULE_3__.D\n    ];\n});\n_c2 = Environment;\n// Vegetation and Props System\nfunction VegetationSystem(param) {\n    let { config } = param;\n    _s3();\n    const vegetationRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const { camera } = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_3__.C)();\n    const [trees, setTrees] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Generate vegetation around player\n    (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_3__.D)({\n        \"VegetationSystem.useFrame\": ()=>{\n            if (!config.environment.enableVegetation) return;\n            const playerPos = camera.position;\n            const spawnRadius = 100;\n            const maxTrees = 200;\n            // Simple tree spawning (in production would be more sophisticated)\n            if (trees.length < maxTrees) {\n                for(let i = 0; i < 5; i++){\n                    const angle = Math.random() * Math.PI * 2;\n                    const distance = Math.random() * spawnRadius;\n                    const x = playerPos.x + Math.cos(angle) * distance;\n                    const z = playerPos.z + Math.sin(angle) * distance;\n                    // Create simple tree\n                    const tree = new three__WEBPACK_IMPORTED_MODULE_4__.Group();\n                    // Trunk\n                    const trunkGeometry = new three__WEBPACK_IMPORTED_MODULE_4__.CylinderGeometry(0.3, 0.5, 4, 8);\n                    const trunkMaterial = new three__WEBPACK_IMPORTED_MODULE_4__.MeshLambertMaterial({\n                        color: 0x4a4a2a\n                    });\n                    const trunk = new three__WEBPACK_IMPORTED_MODULE_4__.Mesh(trunkGeometry, trunkMaterial);\n                    trunk.position.y = 2;\n                    trunk.castShadow = true;\n                    // Leaves\n                    const leavesGeometry = new three__WEBPACK_IMPORTED_MODULE_4__.SphereGeometry(2.5, 8, 6);\n                    const leavesMaterial = new three__WEBPACK_IMPORTED_MODULE_4__.MeshLambertMaterial({\n                        color: 0x2d5016\n                    });\n                    const leaves = new three__WEBPACK_IMPORTED_MODULE_4__.Mesh(leavesGeometry, leavesMaterial);\n                    leaves.position.y = 5;\n                    leaves.castShadow = true;\n                    tree.add(trunk);\n                    tree.add(leaves);\n                    tree.position.set(x, 0, z);\n                    if (vegetationRef.current) {\n                        vegetationRef.current.add(tree);\n                        setTrees({\n                            \"VegetationSystem.useFrame\": (prev)=>[\n                                    ...prev,\n                                    tree\n                                ]\n                        }[\"VegetationSystem.useFrame\"]);\n                    }\n                }\n            }\n        }\n    }[\"VegetationSystem.useFrame\"]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"group\", {\n        ref: vegetationRef\n    }, void 0, false, {\n        fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n        lineNumber: 652,\n        columnNumber: 9\n    }, this);\n}\n_s3(VegetationSystem, \"o+R/I0OZI8z/vZz1lsuQoqX4RG4=\", false, function() {\n    return [\n        _react_three_fiber__WEBPACK_IMPORTED_MODULE_3__.C,\n        _react_three_fiber__WEBPACK_IMPORTED_MODULE_3__.D\n    ];\n});\n_c3 = VegetationSystem;\nconst FPSRenderer3D = /*#__PURE__*/ _s4((0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(_c4 = _s4((param, ref)=>{\n    let { config, onPerformanceUpdate, onCameraUpdate } = param;\n    _s4();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const inputManagerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(ref, {\n        \"FPSRenderer3D.useImperativeHandle\": ()=>({\n                setInputManager: ({\n                    \"FPSRenderer3D.useImperativeHandle\": (manager)=>{\n                        inputManagerRef.current = manager;\n                    }\n                })[\"FPSRenderer3D.useImperativeHandle\"],\n                getCanvas: ({\n                    \"FPSRenderer3D.useImperativeHandle\": ()=>canvasRef.current\n                })[\"FPSRenderer3D.useImperativeHandle\"]\n            })\n    }[\"FPSRenderer3D.useImperativeHandle\"]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"absolute inset-0 w-full h-full\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_react_three_fiber__WEBPACK_IMPORTED_MODULE_8__.Canvas, {\n            ref: canvasRef,\n            camera: {\n                fov: config.player.fov,\n                near: 0.1,\n                far: 1000,\n                position: [\n                    0,\n                    5,\n                    0\n                ],\n                rotation: [\n                    0,\n                    0,\n                    0\n                ]\n            },\n            shadows: true,\n            gl: {\n                antialias: true,\n                alpha: false\n            },\n            onCreated: (param)=>{\n                let { gl, scene } = param;\n                gl.shadowMap.enabled = true;\n                gl.shadowMap.type = three__WEBPACK_IMPORTED_MODULE_4__.PCFSoftShadowMap;\n                // Set realistic background color\n                scene.background = new three__WEBPACK_IMPORTED_MODULE_4__.Color(0x87CEEB); // Sky blue\n            },\n            style: {\n                width: \"100%\",\n                height: \"100%\"\n            },\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(FPSCamera, {\n                    config: config,\n                    inputManager: inputManagerRef.current\n                }, void 0, false, {\n                    fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n                    lineNumber: 698,\n                    columnNumber: 5\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Environment, {\n                    config: config\n                }, void 0, false, {\n                    fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n                    lineNumber: 699,\n                    columnNumber: 5\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(TerrainSystem, {\n                    config: config\n                }, void 0, false, {\n                    fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n                    lineNumber: 700,\n                    columnNumber: 5\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(VegetationSystem, {\n                    config: config\n                }, void 0, false, {\n                    fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n                    lineNumber: 701,\n                    columnNumber: 5\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n            lineNumber: 675,\n            columnNumber: 4\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/byronwade/cosmic/src/components/generators/fps-renderer-3d.tsx\",\n        lineNumber: 674,\n        columnNumber: 3\n    }, undefined);\n}, \"PaczmGfFf/8/JPZZjv2uUn+Cdss=\")), \"PaczmGfFf/8/JPZZjv2uUn+Cdss=\");\n_c5 = FPSRenderer3D;\nFPSRenderer3D.displayName = \"FPSRenderer3D\";\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FPSRenderer3D);\nvar _c, _c1, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"FPSCamera\");\n$RefreshReg$(_c1, \"TerrainSystem\");\n$RefreshReg$(_c2, \"Environment\");\n$RefreshReg$(_c3, \"VegetationSystem\");\n$RefreshReg$(_c4, \"FPSRenderer3D$forwardRef\");\n$RefreshReg$(_c5, \"FPSRenderer3D\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/generators/fps-renderer-3d.tsx\n"));

/***/ })

});